name: Release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  push:
    tags:
        - release
        
jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GH_TOKEN }}
      
      - name: Configure git identity
        run: |
          git config --global user.name "Matt Flaherty" && \
          git config --global user.email "mwflaher@alum.mit.edu"
      
      - name: Fetch tags
        run: git fetch --prune --unshallow --tags --force

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install yarn
        uses: borales/actions-yarn@v4
        with:
          cmd: install --frozen-lockfile

      - name: Install auto
        uses: borales/actions-yarn@v4
        with:
          cmd: global add auto

      - name: Build the package
        uses: borales/actions-yarn@v4
        with:
          cmd: bundle
        
      - name: Get the change version type
        run: echo "AUTO_VERSION=$(auto version)" >> $GITHUB_ENV
        
      - name: WTF is the version
        run: echo $AUTO_VERSION

      - name: Bump the version
        uses: borales/actions-yarn@v4
        env:
          AUTO_VERSION: ${{ env.AUTO_VERSION }}
        with:
          cmd: version --new-version $AUTO_VERSION --no-git-tag-version
      
      # - name: Get the new version number
      #   run: echo "PKG_VERSION=$(cat package.json | jq -r .version)" >> $GITHUB_ENV

      # - name: Create a changelog with auto
      #   run: auto changelog --no-git-commit

      # - name: Commit, version and push CHANGELOG.md and package.json files
      #   run: |
      #     git add . && \
      #     git commit --no-verify --message "Bump version to v$PKG_VERSION [skip ci]" && \
      #     git tag -a v$PKG_VERSION -m v$PKG_VERSION && \
      #     git push origin main && \
      #     git push --follow-tags --set-upstream origin main && \
      #     echo "VERSION_SHA=$(git rev-list -n 1 v$PKG_VERSION)" >> $GITHUB_ENV

      # - name: Generate the release with auto
      #   run: auto release --base-branch	main --use-version v$PKG_VERSION --to $VERSION_SHA

      # - name: Delete the release tag
      #   run: git push origin :refs/tags/release && git tag -d release
